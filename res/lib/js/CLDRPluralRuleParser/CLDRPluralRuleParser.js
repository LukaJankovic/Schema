!function(n,r){"function"==typeof define&&define.amd?define(r):"object"==typeof exports?module.exports=r():n.pluralRuleParser=r()}(this,function(){function n(n,r){"use strict";function t(){}function e(n){return function(){var r,t;for(r=0;r<n.length;r++)if(null!==(t=n[r]()))return t;return null}}function l(n){var r,t,e=L,l=[];for(r=0;r<n.length;r++){if(null===(t=n[r]()))return L=e,null;l.push(t)}return l}function u(n,r){return function(){for(var t=L,e=[],l=r();null!==l;)e.push(l),l=r();return e.length<n?(L=t,null):e}}function a(r){var t=r.length;return function(){var e=null;return n.substr(L,t)===r&&(e=r,L+=t),e}}function i(r){return function(){var t=n.substr(L).match(r);return null===t?null:(L+=t[0].length,t[0])}}function f(){var n=q();return null===n?(t(" -- failed i",parseInt(r,10)),n):(n=parseInt(r,10),t(" -- passed i ",n),n)}function s(){var n=k();return null===n?(t(" -- failed n ",r),n):(n=parseFloat(r,10),t(" -- passed n ",n),n)}function o(){var n=z();return null===n?(t(" -- failed f ",r),n):(n=(r+".").split(".")[1]||0,t(" -- passed f ",n),n)}function p(){var n=A();return null===n?(t(" -- failed t ",r),n):(n=(r+".").split(".")[1].replace(/0$/,"")||0,t(" -- passed t ",n),n)}function d(){var n=B();return null===n?(t(" -- failed v ",r),n):(n=(r+".").split(".")[1].length||0,t(" -- passed v ",n),n)}function c(){var n=C();return null===n?(t(" -- failed w ",r),n):(n=(r+".").split(".")[1].replace(/0$/,"").length||0,t(" -- passed w ",n),n)}function v(){var n=l([x,S,e([K,M]),S,W]);return null===n?(t(" -- failed mod"),null):(t(" -- passed "+parseInt(n[0],10)+" "+n[2]+" "+parseInt(n[4],10)),parseInt(n[0],10)%parseInt(n[4],10))}function h(){var n=l([S,N]);return null===n?(t(" -- failed not"),null):n[1]}function g(){var n=l([j,S,e([D]),S,W]);return null!==n?(t(" -- passed is : "+n[0]+" == "+parseInt(n[4],10)),n[0]===parseInt(n[4],10)):(t(" -- failed is"),null)}function I(){var n=l([j,S,e([G,H]),S,W]);return null!==n?(t(" -- passed isnot: "+n[0]+" != "+parseInt(n[4],10)),n[0]!==parseInt(n[4],10)):(t(" -- failed isnot"),null)}function w(){var n,r,e=l([j,S,H,S,m]);if(null!==e){for(t(" -- passed not_in: "+e[0]+" != "+e[4]),r=e[4],n=0;n<r.length;n++)if(parseInt(r[n],10)===parseInt(e[0],10))return!1;return!0}return t(" -- failed not_in"),null}function m(){var n=l([e([b,W]),u(0,T)]),r=[];return null!==n?(r=r.concat(n[0]),n[1][0]&&(r=r.concat(n[1][0])),r):(t(" -- failed rangeList"),null)}function T(){var n=l([V,m]);return null!==n?n[1]:(t(" -- failed rangeTail"),null)}function b(){var n,r,e,u,a=l([W,U,W]);if(null!==a){for(t(" -- passed range"),r=[],e=parseInt(a[0],10),u=parseInt(a[2],10),n=e;n<=u;n++)r.push(n);return r}return t(" -- failed range"),null}function P(){var n,r,a;if(null!==(n=l([j,u(0,h),S,e([O,J]),S,m]))){for(t(" -- passed _in:"+n),r=n[5],a=0;a<r.length;a++)if(parseInt(r[a],10)===parseInt(n[0],10))return"not"!==n[1][0];return"not"===n[1][0]}return t(" -- failed _in "),null}function _(){var n,r;return null!==(r=l([j,u(0,h),S,Q,S,m]))?(t(" -- passed within"),n=r[5],r[0]>=parseInt(n[0],10)&&r[0]<parseInt(n[n.length-1],10)?"not"!==r[1][0]:"not"===r[1][0]):(t(" -- failed within "),null)}function y(){var n,r=l([E,u(0,R)]);if(r){if(!r[0])return!1;for(n=0;n<r[1].length;n++)if(!r[1][n])return!1;return!0}return t(" -- failed and"),null}function R(){var n=l([S,Y,S,E]);return null!==n?(t(" -- passed andTail"+n),n[3]):(t(" -- failed andTail"),null)}function $(){var n=l([S,X,S,y]);return null!==n?(t(" -- passed orTail: "+n[3]),n[3]):(t(" -- failed orTail"),null)}if(!(n=n.split("@")[0].replace(/^\s*/,"").replace(/\s*$/,"")).length)return!0;var x,j,E,F,L=0,S=i(/^\s+/),W=i(/^\d+/),k=a("n"),q=a("i"),z=a("f"),A=a("t"),B=a("v"),C=a("w"),D=a("is"),G=a("is not"),H=a("!="),J=a("="),K=a("mod"),M=a("%"),N=a("not"),O=a("in"),Q=a("within"),U=a(".."),V=a(","),X=a("or"),Y=a("and");if(t("pluralRuleParser",n,r),x=e([s,f,o,p,d,c]),j=e([v,x]),E=e([g,w,I,P,_]),null===(F=function(){var n,r=l([y,u(0,$)]);if(r){for(n=0;n<r[1].length;n++)if(r[1][n])return!0;return r[0]}return!1}()))throw new Error("Parse error at position "+L.toString()+" for rule: "+n);return L!==n.length&&t("Warning: Rule not parsed completely. Parser stopped at "+n.substr(0,L)+" for rule: "+n),F}return n});
